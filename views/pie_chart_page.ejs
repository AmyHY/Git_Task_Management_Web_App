<!DOCTYPE html>
<html>
<head>
    <title>饼图</title>
    <!-- Include Chart.js library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        console.log('Chart.js version:', Chart.version);
    </script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <!-- pie_chart_page.ejs -->

    <!-- pie_chart_page.ejs -->

    <style>
        /* Set the size of the container to take 70% of the viewport width */
        #chartContainer {
            width: 70vw;
            height: 70vw;
            max-width: 620px; /* Limit the maximum width of the container to 650px */
            max-height: 620px; /* Limit the maximum height of the container to 650px */
            margin: 0 auto; /* Center the container horizontally */
            position: relative; /* Set the container as a reference for absolute positioning */
        }
    
        /* Absolute positioning to move the pie chart to the leftmost 3/5 of the viewport */
        canvas {
            position: absolute;
            top: 50%; /* Vertically center the pie chart */
            left: calc(50%); /* Move the pie chart to the left of the viewport */
            transform: translate(-50%, -50%); /* Center the pie chart properly */
        }
    
        /* Center the h1 and p elements horizontally */
        h1,
        p {
            text-align: center;
        }
    
        /* Center the button horizontally */
        #backButtonContainer {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }
    
        /* Adjust button styles */
        #backButton {
            padding: 10px 20px;
            margin: 0;
        }
    
        /* Use Flexbox to position the elements */
        #centerContainer {
            display: flex;
            flex-direction: column; /* Stack the h1 and p elements vertically */
            align-items: center; /* Center the elements horizontally */
            margin-bottom: 20px; /* Add some margin at the bottom */
        }
    
        /* Add Flexbox to horizontally align the "chartContainer" and "task_list" divs */
        #chartAndTaskListContainer {
            display: flex;
            justify-content: center; /* Center the elements horizontally */
            gap: 0px; /* Add some gap between the elements */
            flex-wrap: wrap; /* Allow elements to wrap to the next line if needed */
        }
    
        /* Adjust the width of the "chartContainer" and "task_list" divs */
        #chartContainer,
        #task_list {
            flex-basis: calc(50% - 20px); /* Each div takes 50% of the available width minus gap */
        }

        /* Adjust the width and height of the "task_list" div */
        #task_list {
            padding: 10px; /* Add some padding for better appearance */
            overflow: auto; /* Enable scrolling if the content exceeds the div's height */
            margin-top: 20px; /* Add some margin at the top */
            margin-right: 50px;
            flex-basis: calc(40%); /* Take 1/3 of the available width minus gap */
        }
    </style>
    


</head>
<body>
    <!-- Use a container to wrap the h1 and p tags -->
    <div id="centerContainer">
        <h1>工作项饼图</h1>
        <p>员工姓名：<%= assigneeName %></p>
    </div>

    <div id="chartAndTaskListContainer">
        <!-- Use a container to wrap the pie chart -->
        <div id="chartContainer">
            <canvas id="myPieChart"></canvas>
        </div>

        <div id="task_list" class="mt-3">
            <table class="table table-bordered table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>标题</th>
                        <th>状态</th>
                    </tr>
                </thead>
                <tbody>
                    <% for (let i = 0; i < issueTitles_all.length; i++) { %>
                        <tr>
                            <td><%= issueTitles_all[i] %></td>
                            <td><%= issueTitles_progress[i] %></td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
        
    </div>

    <!-- Add a container to wrap the button -->
    <div id="backButtonContainer">
        <!-- Create a button to go back to the home page with Bootstrap primary style -->
        <button id="backButton" class="btn btn-light" onclick="goToHomePage()">返回首页</button>
    </div>



    <script>
        // Get the data from the server (stateCounts is already passed from app.js)
        const stateCountsString = <%- JSON.stringify(stateCounts) %>;
        console.log('stateCountsString in pie_chart_page:', stateCountsString); //debugging
        
        const stateLabelTranslations = <%- JSON.stringify(stateLabelTranslations) %>;
        console.log('stateLabelTranslations in pie_chart_page:', stateLabelTranslations); // Debugging

        // const chineseLabels = Object.keys(stateCountsString).reduce((acc, label) => {
        //     const translatedLabel = stateLabelTranslations[label];
        //     acc[translatedLabel] = stateCountsString[label];
        //     return acc;
        // }, {});
        const chineseLabels = stateCountsString;

        // Calculate the total sum of data values
        const total = Object.values(chineseLabels).reduce((sum, value) => sum + value, 0);

        console.log('chineseLabels:', chineseLabels); // Debugging
        console.log('total:', total); // Debugging

        // Calculate the percentages for each data value
        const percentages = Object.values(chineseLabels).map(value => ((value / total) * 100).toFixed(2) + '%');

        // Delay rendering the pie chart until the DOM is ready
        document.addEventListener('DOMContentLoaded', () => {
            console.log('DOM is ready.');
            console.log('percentages = ' + percentages);

            // Concatenate percentages to the Chinese labels
            const labelsWithPercentage = Object.keys(chineseLabels).map(label => label + ' = ' + percentages.shift());
            // Create the pie chart with Chinese labels and percentages
            const ctx = document.getElementById('myPieChart').getContext('2d');
            const myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labelsWithPercentage,
                    datasets: [{
                        data: Object.values(stateCountsString),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.7)',
                            'rgba(54, 162, 235, 0.7)',
                            'rgba(75, 192, 192, 0.7)',
                            'rgba(255, 206, 86, 0.7)',
                        ],
                        borderWidth: 1,
                    }],
                },
                options: {
                    responsive: true,
                    legend: {
                        display: true,
                        position: 'bottom',
                    },
                    plugins: {
                        tooltips: {
                            enabled: true,
                            callbacks: {
                                label: (tooltipItem, data) => {
                                    const dataset = data.datasets[tooltipItem.datasetIndex];
                                    const totalValue = dataset.data.reduce((sum, value) => sum + value, 0);
                                    const currentValue = dataset.data[tooltipItem.index];
                                    const percentage = ((currentValue / totalValue) * 100).toFixed(2) + '%';
                                    const translatedLabel = labelsWithPercentage[tooltipItem.index];

                                    console.log('Label:', translatedLabel);
                                    console.log('Current Value:', currentValue);
                                    console.log('Percentage:', percentage);

                                    return `${translatedLabel}: ${currentValue} (${percentage})`;
                                }
                            }
                        }
                    }
                },
            });
        });
        // Function to navigate back to the home page
        function goToHomePage() {
            window.location.href = "/"; // Redirect to the home page ("/")
        }
        const issueTitles_all = <%- JSON.stringify(issueTitles_all) %>;
        console.log("All Issue Titles:", issueTitles_all);
        const issueTitles_progress = <%- JSON.stringify(issueTitles_progress) %>;
        console.log("Issue Titles Progress:", issueTitles_progress);
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
</body>
</html>
