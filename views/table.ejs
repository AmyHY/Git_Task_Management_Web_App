<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>工作项概览</title>
    <!-- CSS -->
    <link rel="stylesheet" href="css/styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container my-5">
        <h1 class="text-center mb-4">Gitee工作项概览</h1>

        <!-- Button to create a new issue -->
        <div class="text-center mt-4">
            <a href="/create-issue-form" class="btn btn-primary">创建Gitee新工作项</a>
        </div>

        <!-- filter form -->
        <div class="container mt-4">
            <form id="filterForm" method="POST">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="program">筛选项目</label>
                            <select id="program" name="program" class="form-select">
                                <option value="all">All</option>
                                <% const uniquePrograms = Array.from(new Set(issues_data.map(issue => issue.program?.name).filter(Boolean))); %>
                                <% for (let i = 0; i < uniquePrograms.length; i++) { %>
                                    <option value="<%= uniquePrograms[i] %>"><%- uniquePrograms[i] %></option>
                                <% } %>
                            </select>
                        </div>
                    </div>    
            
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="repo">筛选仓库</label>
                            <select id="repo" name="repo" class="form-select">
                                <option value="all">All</option>
                                <% const repos = Array.from(new Set(repos_data.map(repo => repo.path))); %>
                                <% for (let i = 0; i < repos.length; i++) { %>
                                    <option value="<%= repos[i] %>"><%- repos[i] %></option>
                                <% } %>
                            </select>
                        </div>
                    </div> 

                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="milestones">筛选里程碑</label>
                            <select id="milestones" name="milestones" class="form-select">
                                <option value="all">All</option>
                                <% const uniqueMilestones = Array.from(new Set(milestones_data.map(milestone => milestone.title))); %>
                                <% for (let i = 0; i < uniqueMilestones.length; i++) { %>
                                    <option value="<%= uniqueMilestones[i] %>"><%- uniqueMilestones[i] %></option>
                                <% } %>
                            </select>
                        </div>
                    </div>
            
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="user">筛选人员</label>
                            <select id="user" name="user" class="form-select">
                                <option value="all">All</option>
                                <% const uniqueUserNames = Array.from(new Set(issues_data.map(issue => issue.user.name))); %>
                                <% for (let i = 0; i < uniqueUserNames.length; i++) { %>
                                    <option value="<%= uniqueUserNames[i] %>"><%- uniqueUserNames[i] %></option>
                                <% } %>
                            </select>
                        </div>
                    </div> 
            
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="deadline">计划时间内</label>
                            <select id="deadline" name="deadline" class="form-select">
                                <option value="all">All</option>
                                <option value="2023-07-31T23:59:59+08:00">2023-07-31T23:59:59+08:00</option>
                                <option value="valueB">Value B</option>
                            </select>
                        </div>
                    </div> 
            
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary mt-4">请点击筛选</button>
                    </div>
                </div>
            </form>
            
        </div>


        <!-- first table -->
        <div class="table-responsive">
            <h2 class="text-center mb-4">工作进度</h2>
            <table class="table table-bordered table-hover">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">工程师</th>
                        <th scope="col">逾期+任务未完成的任务 数量</th>
                        <th scope="col">占当前逾期+任务未完成总数量的占比</th>
                    </tr>
                </thead>
                <tbody id="tbody_progress">
                    <!-- too be populated later in the script -->
                </tbody> 
            </table>
        </div>


         <!-- second table -->
         <div class="table-responsive">
            <h2 class="text-center mb-4">工作态度</h2>
            <table class="table table-bordered table-hover">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">工程师</th> 
                        <th scope="col">逾期+任务未完成+且未评论 数量</th>
                        <th scope="col">placeholder</th>
                    </tr>
                </thead>
                <tbody id="tbody_attitude">
                    <!-- too be populated later in the script -->
                </tbody> 
            </table>
        </div>


        <!-- third table -->
        <div class="table-responsive">
            <h2 class="text-center mb-4">工作强度</h2>
            <table class="table table-bordered table-hover">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">工程师</th> 
                        <th scope="col">任务数量</th>
                        <th scope="col">占当前任务总数量的占比</th> 
                    </tr>
                </thead>
                <tbody id="tbody_intensity">
                    <!-- too be populated later in the script -->
                </tbody> 
            </table>
        </div>


        <!-- fourth table -->
        <div class="table-responsive">
            <h2 class="text-center mb-4">个人进度</h2>
            <table class="table table-bordered table-hover">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">工程师</th> 
                        <th scope="col">未完成任务数量+已完成任务数量的比例</th>
                        <th scope="col">placeholder</th>
                    </tr>
                </thead>
                <tbody id="tbody_individual">
                    <!-- too be populated later in the script -->
                </tbody> 
            </table>
        </div>

    </div>
    
    
    <script src="/app.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function renderTableRows(targetSelector, data) {
            const tbody = document.querySelector(targetSelector);
            tbody.innerHTML = ''; // Clear existing rows

            data.forEach((user) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                <td>${user.name}</td>
                <td>placeholder</td>
                <td>placeholder</td>
                `;
                tbody.appendChild(row);
            });
        }

        document.addEventListener('DOMContentLoaded', () => {
            const form = document.querySelector('#filterForm');
            console.log("筛选<form>已初始化，请点击筛选按钮填充表格。"); // Debugging
            form.addEventListener('submit', async (event) => {
                event.preventDefault();

                const formData = new FormData(form);
                const formDataObject = {};
                formData.forEach((value, key) => {
                    formDataObject[key] = value;
                });

                const response = await fetch('/filter', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formDataObject),
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const filteredData = await response.json(); // filtereData 是表格上方筛选bar 筛选过后的issues（json）
                //---------------------handle filteredData based on needs--------------------------
                //---------------------------------------------------------------------------------
                //---------------------------------------------------------------------------------
                //---------------------------------------------------------------------------------

                // Use reduce to group issues by user.name
                const userGroups = filteredData.reduce((groups, issue) => {
                    const userName = issue.user.name;
                    if (!groups[userName]) {
                        groups[userName] = [];
                    }
                    groups[userName].push(issue);
                    return groups;
                }, {});

                // Convert the object into an array of user objects
                const userArray = Object.keys(userGroups).map((userName) => ({
                    name: userName,
                    issues: userGroups[userName],
                }));

                table_ready_filteredData = userArray;
                renderTableRows('#tbody_progress', table_ready_filteredData);
                table_ready_filteredData = userArray;
                renderTableRows('#tbody_attitude', table_ready_filteredData);
                table_ready_filteredData = userArray;
                renderTableRows('#tbody_intensity', table_ready_filteredData);
                table_ready_filteredData = userArray;
                renderTableRows('#tbody_individual', table_ready_filteredData);

                console.log("Done populating tbody!");
            });
        });
    </script>
    
</body>
</html>

    <!-- The data passed into 'table.ejs' from 'app.js':
      {
        assigneeName: 'Assignee Name',
        stateCounts: {
          'open': 5,
          'closed': 3,
          // ... other state counts
        },
        filteredIssuesCount: 8,
        issueTitles_priority: ['Title 1', 'Title 2', 'Title 3'],
        issueTitles_all: ['Title 4', 'Title 5', 'Title 6'],
        issueTitles_progress: ['Open', 'Closed', 'In Progress']
        // ... other data specific to the assignee
      } -->